// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package task.proxies;

public class All_information
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject all_informationMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "Task.All_information";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		Person("Person"),
		Amount("Amount"),
		All_information_People("Task.All_information_People"),
		All_information_Borrowings("Task.All_information_Borrowings");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public All_information(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "Task.All_information"));
	}

	protected All_information(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject all_informationMendixObject)
	{
		if (all_informationMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("Task.All_information", all_informationMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a Task.All_information");

		this.all_informationMendixObject = all_informationMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'All_information.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static task.proxies.All_information initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return task.proxies.All_information.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.getSudoContext() can be used to obtain sudo access).
	 */
	public static task.proxies.All_information initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new task.proxies.All_information(context, mendixObject);
	}

	public static task.proxies.All_information load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return task.proxies.All_information.initialize(context, mendixObject);
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of Person
	 */
	public final java.lang.String getPerson()
	{
		return getPerson(getContext());
	}

	/**
	 * @param context
	 * @return value of Person
	 */
	public final java.lang.String getPerson(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Person.toString());
	}

	/**
	 * Set value of Person
	 * @param person
	 */
	public final void setPerson(java.lang.String person)
	{
		setPerson(getContext(), person);
	}

	/**
	 * Set value of Person
	 * @param context
	 * @param person
	 */
	public final void setPerson(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String person)
	{
		getMendixObject().setValue(context, MemberNames.Person.toString(), person);
	}

	/**
	 * @return value of Amount
	 */
	public final java.lang.Integer getAmount()
	{
		return getAmount(getContext());
	}

	/**
	 * @param context
	 * @return value of Amount
	 */
	public final java.lang.Integer getAmount(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Integer) getMendixObject().getValue(context, MemberNames.Amount.toString());
	}

	/**
	 * Set value of Amount
	 * @param amount
	 */
	public final void setAmount(java.lang.Integer amount)
	{
		setAmount(getContext(), amount);
	}

	/**
	 * Set value of Amount
	 * @param context
	 * @param amount
	 */
	public final void setAmount(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Integer amount)
	{
		getMendixObject().setValue(context, MemberNames.Amount.toString(), amount);
	}

	/**
	 * @return value of All_information_People
	 */
	public final task.proxies.People getAll_information_People() throws com.mendix.core.CoreException
	{
		return getAll_information_People(getContext());
	}

	/**
	 * @param context
	 * @return value of All_information_People
	 */
	public final task.proxies.People getAll_information_People(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		task.proxies.People result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.All_information_People.toString());
		if (identifier != null)
			result = task.proxies.People.load(context, identifier);
		return result;
	}

	/**
	 * Set value of All_information_People
	 * @param all_information_people
	 */
	public final void setAll_information_People(task.proxies.People all_information_people)
	{
		setAll_information_People(getContext(), all_information_people);
	}

	/**
	 * Set value of All_information_People
	 * @param context
	 * @param all_information_people
	 */
	public final void setAll_information_People(com.mendix.systemwideinterfaces.core.IContext context, task.proxies.People all_information_people)
	{
		if (all_information_people == null)
			getMendixObject().setValue(context, MemberNames.All_information_People.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.All_information_People.toString(), all_information_people.getMendixObject().getId());
	}

	/**
	 * @return value of All_information_Borrowings
	 */
	public final task.proxies.Borrowings getAll_information_Borrowings() throws com.mendix.core.CoreException
	{
		return getAll_information_Borrowings(getContext());
	}

	/**
	 * @param context
	 * @return value of All_information_Borrowings
	 */
	public final task.proxies.Borrowings getAll_information_Borrowings(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		task.proxies.Borrowings result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.All_information_Borrowings.toString());
		if (identifier != null)
			result = task.proxies.Borrowings.load(context, identifier);
		return result;
	}

	/**
	 * Set value of All_information_Borrowings
	 * @param all_information_borrowings
	 */
	public final void setAll_information_Borrowings(task.proxies.Borrowings all_information_borrowings)
	{
		setAll_information_Borrowings(getContext(), all_information_borrowings);
	}

	/**
	 * Set value of All_information_Borrowings
	 * @param context
	 * @param all_information_borrowings
	 */
	public final void setAll_information_Borrowings(com.mendix.systemwideinterfaces.core.IContext context, task.proxies.Borrowings all_information_borrowings)
	{
		if (all_information_borrowings == null)
			getMendixObject().setValue(context, MemberNames.All_information_Borrowings.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.All_information_Borrowings.toString(), all_information_borrowings.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return all_informationMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final task.proxies.All_information that = (task.proxies.All_information) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "Task.All_information";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
