// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package task.proxies;

public class Borrowings
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject borrowingsMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "Task.Borrowings";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		Amount("Amount"),
		for_what("for_what"),
		Borrowings_Lender("Task.Borrowings_Lender"),
		Borrowings_Debtor("Task.Borrowings_Debtor"),
		Borrowings_Party("Task.Borrowings_Party");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public Borrowings(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "Task.Borrowings"));
	}

	protected Borrowings(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject borrowingsMendixObject)
	{
		if (borrowingsMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("Task.Borrowings", borrowingsMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a Task.Borrowings");

		this.borrowingsMendixObject = borrowingsMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'Borrowings.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static task.proxies.Borrowings initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return task.proxies.Borrowings.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.getSudoContext() can be used to obtain sudo access).
	 */
	public static task.proxies.Borrowings initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new task.proxies.Borrowings(context, mendixObject);
	}

	public static task.proxies.Borrowings load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return task.proxies.Borrowings.initialize(context, mendixObject);
	}

	public static java.util.List<task.proxies.Borrowings> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<task.proxies.Borrowings> result = new java.util.ArrayList<task.proxies.Borrowings>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//Task.Borrowings" + xpathConstraint))
			result.add(task.proxies.Borrowings.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of Amount
	 */
	public final java.lang.Integer getAmount()
	{
		return getAmount(getContext());
	}

	/**
	 * @param context
	 * @return value of Amount
	 */
	public final java.lang.Integer getAmount(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Integer) getMendixObject().getValue(context, MemberNames.Amount.toString());
	}

	/**
	 * Set value of Amount
	 * @param amount
	 */
	public final void setAmount(java.lang.Integer amount)
	{
		setAmount(getContext(), amount);
	}

	/**
	 * Set value of Amount
	 * @param context
	 * @param amount
	 */
	public final void setAmount(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Integer amount)
	{
		getMendixObject().setValue(context, MemberNames.Amount.toString(), amount);
	}

	/**
	 * @return value of for_what
	 */
	public final java.lang.String getfor_what()
	{
		return getfor_what(getContext());
	}

	/**
	 * @param context
	 * @return value of for_what
	 */
	public final java.lang.String getfor_what(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.for_what.toString());
	}

	/**
	 * Set value of for_what
	 * @param for_what
	 */
	public final void setfor_what(java.lang.String for_what)
	{
		setfor_what(getContext(), for_what);
	}

	/**
	 * Set value of for_what
	 * @param context
	 * @param for_what
	 */
	public final void setfor_what(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String for_what)
	{
		getMendixObject().setValue(context, MemberNames.for_what.toString(), for_what);
	}

	/**
	 * @return value of Borrowings_Lender
	 */
	public final task.proxies.People getBorrowings_Lender() throws com.mendix.core.CoreException
	{
		return getBorrowings_Lender(getContext());
	}

	/**
	 * @param context
	 * @return value of Borrowings_Lender
	 */
	public final task.proxies.People getBorrowings_Lender(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		task.proxies.People result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Borrowings_Lender.toString());
		if (identifier != null)
			result = task.proxies.People.load(context, identifier);
		return result;
	}

	/**
	 * Set value of Borrowings_Lender
	 * @param borrowings_lender
	 */
	public final void setBorrowings_Lender(task.proxies.People borrowings_lender)
	{
		setBorrowings_Lender(getContext(), borrowings_lender);
	}

	/**
	 * Set value of Borrowings_Lender
	 * @param context
	 * @param borrowings_lender
	 */
	public final void setBorrowings_Lender(com.mendix.systemwideinterfaces.core.IContext context, task.proxies.People borrowings_lender)
	{
		if (borrowings_lender == null)
			getMendixObject().setValue(context, MemberNames.Borrowings_Lender.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.Borrowings_Lender.toString(), borrowings_lender.getMendixObject().getId());
	}

	/**
	 * @return value of Borrowings_Debtor
	 */
	public final task.proxies.People getBorrowings_Debtor() throws com.mendix.core.CoreException
	{
		return getBorrowings_Debtor(getContext());
	}

	/**
	 * @param context
	 * @return value of Borrowings_Debtor
	 */
	public final task.proxies.People getBorrowings_Debtor(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		task.proxies.People result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Borrowings_Debtor.toString());
		if (identifier != null)
			result = task.proxies.People.load(context, identifier);
		return result;
	}

	/**
	 * Set value of Borrowings_Debtor
	 * @param borrowings_debtor
	 */
	public final void setBorrowings_Debtor(task.proxies.People borrowings_debtor)
	{
		setBorrowings_Debtor(getContext(), borrowings_debtor);
	}

	/**
	 * Set value of Borrowings_Debtor
	 * @param context
	 * @param borrowings_debtor
	 */
	public final void setBorrowings_Debtor(com.mendix.systemwideinterfaces.core.IContext context, task.proxies.People borrowings_debtor)
	{
		if (borrowings_debtor == null)
			getMendixObject().setValue(context, MemberNames.Borrowings_Debtor.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.Borrowings_Debtor.toString(), borrowings_debtor.getMendixObject().getId());
	}

	/**
	 * @return value of Borrowings_Party
	 */
	public final task.proxies.Party getBorrowings_Party() throws com.mendix.core.CoreException
	{
		return getBorrowings_Party(getContext());
	}

	/**
	 * @param context
	 * @return value of Borrowings_Party
	 */
	public final task.proxies.Party getBorrowings_Party(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		task.proxies.Party result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Borrowings_Party.toString());
		if (identifier != null)
			result = task.proxies.Party.load(context, identifier);
		return result;
	}

	/**
	 * Set value of Borrowings_Party
	 * @param borrowings_party
	 */
	public final void setBorrowings_Party(task.proxies.Party borrowings_party)
	{
		setBorrowings_Party(getContext(), borrowings_party);
	}

	/**
	 * Set value of Borrowings_Party
	 * @param context
	 * @param borrowings_party
	 */
	public final void setBorrowings_Party(com.mendix.systemwideinterfaces.core.IContext context, task.proxies.Party borrowings_party)
	{
		if (borrowings_party == null)
			getMendixObject().setValue(context, MemberNames.Borrowings_Party.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.Borrowings_Party.toString(), borrowings_party.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return borrowingsMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final task.proxies.Borrowings that = (task.proxies.Borrowings) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "Task.Borrowings";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
